#include <err.h>
#include <unistd.h>
#include <stdint.h>
#include <sys/types.h>
#include <fcntl.h>
#include <stdlib.h>
#include <stdio.h>

typedef struct{
        uint32_t from;
        uint32_t length;
 } pair_t;

int main(int argc, char* argv[]){
        if(argc != 4){
                errx(1,"Incorrect number of arguments");
        }

        int fd1 = open(argv[1], O_RDONLY);

        if( fd1 == -1){
                err(2, "Error in opening fd1");
        }

        int fd2 = open(argv[2], O_RDONLY);

        if( fd2 == -1){
                close(fd1);
                err(3, "Error in opening fd2");
        }

        int fd3 = open(argv[3], O_CREAT | O_WRONLY | O_TRUNC, S_IWUSR, S_IXUSR);

        if( fd3 == -1){
                close(fd1);
                close(fd2);
                err(4, "Error in opening/creating fd3");
        }

        //uint32_t coords[2];
        pair_t pair;
        uint32_t num;
        off_t offset;
        int read_status;

     	struct stat st;
        if(stat(argv[1], &st) < 0){
                err(2, "Error stat file!");
        }

        if(st.st_size % sizeof(pair) != 0){
                errx(3, "File1 is not in our format");
        }

        if(stat(argv[2], &st) < 0){
                err(2, "Error stat file");
        }

        if(st.st_size % sizeof(uint32_t) != 0){
                errx(3, "File2 is not in our format");
        }

        while( (read_status = read(fd1, &pair, sizeof(pair)) > 0)){
                uint32_t from=pair.from;
                uint32_t length=pair.length;
                offset = lseek(fd2, from*sizeof(uint32_t), SEEK_SET);
                if(offset == -1){
                        err(5, "Error in lseek");
                }

                //uint32_t count=1;
                for(uint32_t i=0; i<length; i++){
                        read_status=read(fd2, &num, sizeof(num));
                        if(read_status == -1){
                                err(6,"Error in reading");
                        }
                        write(fd3, &num, sizeof(num));
                //while((read_status = read(fd2, &num, sizeof(num))) && count<=length){
                //      count++;
                //      write..
                }
        }
        exit(0);
}
