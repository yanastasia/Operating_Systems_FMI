#include <stdlib.h>
#include <unistd.h>
#include <err.h>
#include <fcntl.h>

int main(void){
        // cut -d ':' -f7 /etc/passwd | sort | uniq -c -> 3 fork, 3 pipe

        int pf1[2], pf2[2], pf3[2];

        if(pipe(pf1) == -1){
                err(1, "Error in pipe pf1");
        }

        pid_t pid1 = fork();

        if(pid1 == -1){
                err(2, "Error in fork pid1");
        }

        //Child
        if(pid1 == 0){
                close(pf1[0]);
                dup2(pf1[1],1);
                if(execlp("cut","cut","-d",":","-f","7","/etc/passwd", (char*)NULL) == -1){
                        err(3,"Error in execlp cut");
                }
        }

        close(pf1[1]);
        dup2(pf1[0],0);

        if(pipe(pf2) == -1){
                err(4, "Error in pipe pf2");
        }

        pid_t pid2 = fork();

        if(pid2 == -1){
                err(5, "Error in fork pid2");
        }

        if(pid2 == 0){
                close(pf2[0]);
                dup2(pf2[1],1);
                if(execlp("sort", "sort", (char*)NULL) == -1){
                        err(6, "Error in execlp sort");
                }
        }

        close(pf2[1]);
        close(pf1[0]); //not needed anymore
        dup2(pf2[0],0);

        if(pipe(pf3) == -1){
                err(7, "Error in pipe pf3");
        }

        pid_t pid3 = fork();

        if(pid3 == -1){
                err(8, "Error in fork pid3");
        }

        if(pid3 == 0){
                close(pf3[0]);
                dup2(pf3[1],1);
                if(execlp("uniq","uniq","-c",(char*)NULL) == -1){
                        err(9, "Error in execlp uniq");
                }
        }

        close(pf3[1]);
        close(pf2[0]); //not needed anymore
        dup2(pf3[0],0);

        if(execlp("sort","sort","-n",(char*)NULL) == -1){
                err(10, "Error in execlp sort -n");
        }

        exit(0);
}
